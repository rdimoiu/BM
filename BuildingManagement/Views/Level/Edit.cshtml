@model BuildingManagement.Models.Level

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Level</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Client, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ClientID", null, "Select...", htmlAttributes: new { @class = "form-control", onchange = "GetSections(this.value)" })
                @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Section, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SectionID", null, "Select...", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SectionID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="@Url.Content("~/Scripts/jquery-1.10.2.min.js")"></script>
<script>
    $(document).ready(function() {
        GetSections(@Model.ClientID);
    });

    function GetSections(idClient) {
        var sectionList = $("#SectionID");
        if (idClient === "") {
            sectionList.empty();
            var firstItem = new Option("Select...", "0");
            sectionList.append(firstItem);
            return;
        }
        var url = "/Level/GetSectionsByClient/";
        $.ajax({
            url: url,
            data: { clientId: idClient, sectionId: @Model.SectionID },
            cache: false,
            type: "POST",
            success: function(data) {
                sectionList.empty();
                var first = new Option("Select...", "0");
                sectionList.append(first);
                for (var i = 0; i < data.length; i++) {
                    var item = new Option(data[i].Text, data[i].Value, false, data[i].Selected);
                    sectionList.append(item);
                }
            },
            error: function(reponse) {
                alert("error : " + reponse);
            }
        });
    }
</script>
