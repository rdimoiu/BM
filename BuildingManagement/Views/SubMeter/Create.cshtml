@model BuildingManagement.Models.SubMeter

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<style type="text/css">
    .demo {
        overflow: auto;
        border: 1px solid silver;
        min-height: 100px;
    }
</style>
<link rel="stylesheet" href="~/Content/themes/default/style.min.css" />

@Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>SubMeter</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Details, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Defect, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Defect)
                @Html.ValidationMessageFor(model => model.Defect, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Meter, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("MeterID", null, "Select...", htmlAttributes: new { @class = "form-control", onchange = "GetMeterTypesAndSpacesForSubMeter('', this.value, 'Create')" })
            @Html.ValidationMessageFor(model => model.MeterID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DistributionMode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("DistributionModeID", null, "Select...", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DistributionModeID, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.MeterTypes, htmlAttributes: new { @class = "control-label col-md-2", @style = "float: left" })
        <br />
        <div id="meterTypesTree" class="form-group" style="float: left"></div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Spaces, htmlAttributes: new { @class = "control-label col-md-2", @style = "float: left" })
        <br />
        <div id="spacesTree" class="form-group" style="float: left"></div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" onclick="ValidateAll('Create')" />
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jstree.js"></script>
<script src="~/Scripts/ValidateSubMeter.js"></script>
<script src="~/Scripts/SubMeterUtils.js"></script>
<script src="~/Scripts/ValidateFields.js"></script>
<script src="~/Scripts/SubmitPage.js"></script>
<script type="text/javascript">
    $(document).ready(function() {
        GetMeterTypesAndSpacesForSubMeter(@Model.ID, @Model.MeterID, "Create");
    });
</script>
