@model BuildingManagement.Models.Invoice

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Invoice</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.Hidden("PreviousPage", @Model.PreviousPage)
    <div class="form-group">
        @Html.LabelFor(model => model.Client, "ClientID", htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.DropDownList("ClientID", null, "Select...", htmlAttributes: new {@class = "form-control"})
            @Html.ValidationMessageFor(model => model.ClientID, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Provider, "ProviderID", htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.DropDownList("ProviderID", null, "Select...", htmlAttributes: new {@class = "form-control"})
            @Html.ValidationMessageFor(model => model.ProviderID, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.InvoiceType, "InvoiceTypeID", htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.DropDownList("InvoiceTypeID", null, "Select...", htmlAttributes: new {@class = "form-control"})
            @Html.ValidationMessageFor(model => model.InvoiceTypeID, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DueDate, htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.DueDate, new {htmlAttributes = new {@class = "form-control", autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.DueDate, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CheckQuantity, htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.CheckQuantity, new {htmlAttributes = new {@class = "form-control", autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.CheckQuantity, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CheckTotalValueWithoutTVA, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CheckTotalValueWithoutTVA, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.CheckTotalValueWithoutTVA, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CheckTotalTVA, htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.CheckTotalTVA, new {htmlAttributes = new {@class = "form-control", autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.CheckTotalTVA, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DiscountMonth, htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.DiscountMonth, new {htmlAttributes = new {@class = "form-control", autocomplete = "off"}})
            @Html.ValidationMessageFor(model => model.DiscountMonth, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" onclick="ValidateAll('Create')" />
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/ValidateInvoice.js"></script>
<script src="~/Scripts/ValidateFields.js"></script>
<script src="~/Scripts/SubmitPage.js"></script>
