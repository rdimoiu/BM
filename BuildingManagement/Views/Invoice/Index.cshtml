@model IPagedList<BuildingManagement.Models.Invoice>
@using X.PagedList.Mvc;
@using X.PagedList;

@{
    ViewBag.Title = "Invoices";
}

<h2>Invoices</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "Invoice", FormMethod.Get))
{
    <p>
        Find @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Client", "Index", new { sortOrder = ViewBag.ClientSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Provider", "Index", new { sortOrder = ViewBag.ProviderSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("InvoiceType", "Index", new { sortOrder = ViewBag.InvoiceTypeSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Number", "Index", new { sortOrder = ViewBag.NumberSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("DueDate", "Index", new { sortOrder = ViewBag.DueDateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("PaidDate", "Index", new { sortOrder = ViewBag.PaidDateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Quantity", "Index", new { sortOrder = ViewBag.QuantitySortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("CheckQuantity", "Index", new { sortOrder = ViewBag.CheckQuantitySortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("TotalValueWithoutTVA", "Index", new { sortOrder = ViewBag.TotalValueWithoutTVASortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("CheckTotalValueWithoutTVA", "Index", new { sortOrder = ViewBag.CheckTotalValueWithoutTVASortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("TotalTVA", "Index", new { sortOrder = ViewBag.TotalTVASortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("CheckTotalTVA", "Index", new { sortOrder = ViewBag.CheckTotalTVASortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("DiscountMonth", "Index", new { sortOrder = ViewBag.DiscountMonthSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Services
        </th>
        <th>
        </th>
    </tr>

    @foreach (var item in ViewBag.OnePageOfInvoices)
    {
        <tr>
            <td>
                @item.Client.Name
            </td>
            <td>
                @item.Provider.Name
            </td>
            <td>
                @item.InvoiceType.Type
            </td>
            <td>
                @item.Number
            </td>
            <td>
                @item.Date.ToString("dd/MM/yyyy")
            </td>
            <td style="@(item.DueDate < @DateTime.Now ? "color : Orange" : "color : Black")">
                @item.DueDate.ToString("dd/MM/yyyy")
            </td>
            @if (item.PaidDate < item.Date)
                {
                <td></td>
            }
            else
            {
                <td>@item.PaidDate.ToString("dd/MM/yyyy")</td>
            }
            <td style="@(item.Quantity != item.CheckQuantity ? "color : Orange" : "color : Black")">
                @item.Quantity.ToString("0.##")
            </td>
            <td style="@(item.Quantity != item.CheckQuantity ? "color : Orange" : "color : Black")">
                @item.CheckQuantity.ToString("0.##")
            </td>
            <td style="@(item.TotalValueWithoutTVA != item.CheckTotalValueWithoutTVA ? "color : Red" : "color : Black")">
                @item.TotalValueWithoutTVA.ToString("0.##")
            </td>
            <td style="@(item.TotalValueWithoutTVA != item.CheckTotalValueWithoutTVA ? "color : Red" : "color : Black")">
                @item.CheckTotalValueWithoutTVA.ToString("0.##")
            </td>
            <td style="@(item.TotalTVA != item.CheckTotalTVA ? "color : Red" : "color : Black")">
                @item.TotalTVA.ToString("0.##")
            </td>
            <td style="@(item.TotalTVA != item.CheckTotalTVA ? "color : Red" : "color : Black")">
                @item.CheckTotalTVA.ToString("0.##")
            </td>
            <td>
                @item.DiscountMonth.ToString("MM/yyyy")
            </td>
            <td>
                @{
                    foreach (var service in item.Services)
                    {
                        @service.Name
                        <br />
                    }
                }
            </td>
            <td>
                @Html.ActionLink("Details", "Details", new { id = item.ID }, new { @class = "details-icon" })
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }, new { @class = "edit-icon" })
                @Html.ActionLink("Delete", "Delete", new { id = item.ID }, new { @class = "delete-icon" })
                @if (item.TotalValueWithoutTVA == item.CheckTotalValueWithoutTVA && item.TotalTVA == item.CheckTotalTVA)
                {
                    if (!item.Closed)
                    {
                        @Html.ActionLink("Close", "Close", new { id = item.ID }, new { @class = "lock-icon" })
                    }
                    else
                    {
                        @Html.ActionLink("Open", "Open", new { id = item.ID }, new { @class = "unlock-icon" })
                    }
                }
            </td>
        </tr>
                    }
</table>
<br />
@Html.PagedListPager((IPagedList)ViewBag.OnePageOfInvoices, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

<script src="~/Scripts/jquery-3.3.1.js"></script>
