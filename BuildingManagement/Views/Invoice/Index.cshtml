@model IPagedList<BuildingManagement.Models.Invoice>
@using X.PagedList.Mvc;
@using X.PagedList;

@{
    ViewBag.Title = "Invoices";
}

<h2>Invoices</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "Invoice", FormMethod.Get))
{
    <p>
        Find @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Client", "Index", new { sortOrder = ViewBag.ClientSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Provider", "Index", new { sortOrder = ViewBag.ProviderSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("InvoiceType", "Index", new { sortOrder = ViewBag.InvoiceTypeSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Number", "Index", new { sortOrder = ViewBag.NumberSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("DueDate", "Index", new {sortOrder = ViewBag.DueDateSortParm, currentFilter = ViewBag.CurrentFilter})
        </th>
        <th>
            @Html.ActionLink("PaidDate", "Index", new { sortOrder = ViewBag.PaidDateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Quantity", "Index", new { sortOrder = ViewBag.QuantitySortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("CheckQuantity", "Index", new { sortOrder = ViewBag.CheckQuantitySortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("TotalValueWithoutTVA", "Index", new { sortOrder = ViewBag.TotalValueWithoutTVASortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("CheckTotalValueWithoutTVA", "Index", new { sortOrder = ViewBag.CheckTotalValueWithoutTVASortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("TotalTVA", "Index", new { sortOrder = ViewBag.TotalTVASortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("CheckTotalTVA", "Index", new { sortOrder = ViewBag.CheckTotalTVASortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("DiscountMonth", "Index", new { sortOrder = ViewBag.DiscountMonthSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Services
        </th>
        <th>
        </th>
    </tr>

    @foreach (var invoice in ViewBag.OnePageOfInvoices)
    {
        <tr>
            <td>
                @invoice.Client.Name
            </td>
            <td>
                @invoice.Provider.Name
            </td>
            <td>
                @invoice.InvoiceType.Type
            </td>
            <td>
                @invoice.Number
            </td>
            <td>
                @invoice.Date.ToString("dd/MM/yyyy")
            </td>
            <td style="@(invoice.DueDate < @DateTime.Now ? "color : Orange" : "color : Black")">
                @invoice.DueDate.ToString("dd/MM/yyyy")
            </td>
            
                @if (invoice.PaidDate < invoice.Date)
                {
                    <td></td>
                }
                else
                {
                    <td>@invoice.PaidDate.ToString("dd/MM/yyyy")</td>
                }
            
            <td style="@(invoice.Quantity != invoice.CheckQuantity ? "color : Red" : "color : Black")">
                @invoice.Quantity
            </td>
            <td style="@(invoice.Quantity != invoice.CheckQuantity ? "color : Red" : "color : Black")">
                @invoice.CheckQuantity
            </td>
            <td style="@(invoice.TotalValueWithoutTVA != invoice.CheckTotalValueWithoutTVA ? "color : Red" : "color : Black")">
                @invoice.TotalValueWithoutTVA
            </td>
            <td style="@(invoice.TotalValueWithoutTVA != invoice.CheckTotalValueWithoutTVA ? "color : Red" : "color : Black")">
                @invoice.CheckTotalValueWithoutTVA
            </td>
            <td style="@(invoice.TotalTVA != invoice.CheckTotalTVA ? "color : Red" : "color : Black")">
                @invoice.TotalTVA
            </td>
            <td style="@(invoice.TotalTVA != invoice.CheckTotalTVA ? "color : Red" : "color : Black")">
                @invoice.CheckTotalTVA
            </td>
            <td>
                @invoice.DiscountMonth.ToString("MM/yyyy")
            </td>
            <td>
                @{
                    foreach (var service in invoice.Services)
                    {
                        @service.Name
                        <br/>
                    }
                }
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = invoice.ID }, new { @class = "edit-icon" }) 
                @Html.ActionLink("Delete", "Delete", new { id = invoice.ID }, new { @class = "delete-icon" }) 
                @Html.ActionLink("Details", "Details", new { id = invoice.ID }, new { @class = "details-icon" }) 
                @*@if (invoice.Quantity == invoice.CheckQuantity && invoice.TotalValueWithoutTVA == invoice.CheckTotalValueWithoutTVA && invoice.TotalTVA == invoice.CheckTotalTVA)*@
                @if (invoice.TotalValueWithoutTVA == invoice.CheckTotalValueWithoutTVA && invoice.TotalTVA == invoice.CheckTotalTVA)
                {
                    if (!invoice.Closed)
                    {
                        @Html.ActionLink("Close", "Close", "Invoice", new { id = invoice.ID }, new { @class = "lock-icon" })
                    }
                    else
                    {
                        @Html.ActionLink("Open", "Open", "Invoice", new { id = invoice.ID }, new { @class = "unlock-icon" })
                    }
                }
            </td>
        </tr>
    }
</table>
<br/>
@Html.PagedListPager((IPagedList)ViewBag.OnePageOfInvoices, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

<script src="~/Scripts/jquery-3.3.1.js"></script>
