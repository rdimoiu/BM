@using System.Web.Mvc.Html
@model BuildingManagement.Models.SubSubMeterReading

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>SubSubMeterReading</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Index, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Index, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.Index, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("SubSubMeter Code", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("SubSubMeterID", null, "Select...", htmlAttributes: new { @class = "form-control", onchange = "GetMeterTypes(this.value)" })
            @Html.ValidationMessageFor(model => model.SubSubMeterID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MeterType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("MeterTypeID", ViewBag.MeterTypeID != null ? (IEnumerable<SelectListItem>)ViewBag.MeterTypeID : new List<SelectListItem>(), "Select...", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MeterTypeID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DiscountMonth, htmlAttributes: new { @id = "DiscountMonthLabel", @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DiscountMonth, new { htmlAttributes = new { @id = "DiscountMonth", @class = "form-control", autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.DiscountMonth, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Initial, htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            <div class="checkbox" onclick="OnChangeEvent()">
                @Html.EditorFor(model => model.Initial)
                @Html.ValidationMessageFor(model => model.Initial, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Estimated, htmlAttributes: new {@id = "EstimatedLabel", @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Estimated, new { htmlAttributes = new { @id = "Estimated" } })
                @Html.ValidationMessageFor(model => model.Estimated, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" onclick="ValidateAll('Create')" />
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/SubSubMeterReadingUtils.js"></script>
<script src="~/Scripts/ValidateSubSubMeterReading.js"></script>
<script src="~/Scripts/ValidateFields.js"></script>
<script src="~/Scripts/SubmitPage.js"></script>
<script src="~/Scripts/ReadingUitls.js"></script>
<script>
    $(document).ready(function() {
        var minDate = (new Date('0001-01-01')).toUTCString();
        var discountMonth = new Date(document.getElementById("DiscountMonth").value).toUTCString();
        if (discountMonth === minDate) {
            document.getElementById("DiscountMonth").value = "";
        }
    });
</script>
