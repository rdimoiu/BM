@model BuildingManagement.ViewModels.CostsIndexData

@{
    ViewBag.Title = BuildingManagement.Resources.Texts.CostsTable;
}

<h2>@BuildingManagement.Resources.Texts.CostsTable</h2>

@using (Html.BeginForm("Index", "CostsTable", FormMethod.Get))
{
    <div class="form-horizontal">
        <h4>@BuildingManagement.Resources.Texts.CostsTable</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <label class="control-label col-md-2">@BuildingManagement.Resources.Texts.DiscountMonth</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.DiscountMonth, new {htmlAttributes = new {@id = "DiscountMonth", @class = "form-control"}})
                @Html.ValidationMessageFor(model => model.DiscountMonth, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">@BuildingManagement.Resources.Texts.Client</label>
            <div class="col-md-10">
                @Html.DropDownList("ClientID", null, "Select...", htmlAttributes: new { @class = "form-control", onchange = "GetSections(this.value, null)" })
                @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">@BuildingManagement.Resources.Texts.Section</label>
            <div class="col-md-10">
                @Html.DropDownList("SectionID", null, "Select...", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SectionID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value=@BuildingManagement.Resources.Texts.Display class="btn btn-default" onclick="ValidateAll()" />
            </div>
        </div>
    </div>
    <table>
        <thead>
            <tr style="height: auto">
                @foreach (var col in Model.Cols)
                {
                    <td class="table-head-vertical">@col.Key</td>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var space in Model.Spaces)
            {
                <tr>
                    <td style="border: solid">@Model.Rows[space.Number + " " + space.Level.Number]["Space"]</td>
                    <td style="border: solid">@Model.Rows[space.Number + " " + space.Level.Number]["SpaceType"]</td>
                    <td style="border: solid">@Model.Rows[space.Number + " " + space.Level.Number]["SubClient"]</td>
                    <td style="border: solid">@Model.Rows[space.Number + " " + space.Level.Number]["Surface"]</td>
                    <td style="border: solid">@Model.Rows[space.Number + " " + space.Level.Number]["People"]</td>

                    @foreach (var service in Model.Services)
                    {
                        <td style="border: solid">@Model.Rows[space.Number + " " + space.Level.Number][service.Name]</td>
                    }
                </tr>
            }
        </tbody>
    </table>
}

<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/ValidateFields.js"></script>

<script>
    $(document).ready(function () {
        var minDate = (new Date('0001-01-01')).toUTCString();
        var discountMonth = new Date(document.getElementById("DiscountMonth").value).toUTCString();
        if (discountMonth === minDate) {
            document.getElementById("DiscountMonth").value = "";
        }
    });

    function GetSections(idClient, idSection) {
        var sectionList = $("#SectionID");
        sectionList.empty();
        var firstSection = new Option("Select...", "0");
        sectionList.append(firstSection);

        var url = "../Costs/GetSectionsByClient/";

        $.ajax({
            url: url,
            data: { clientId: idClient, sectionId: idSection },
            cache: false,
            type: "POST",
            success: function (data) {
                for (var i = 0; i < data.length; i++) {
                    var item = new Option(data[i].Text, data[i].Value, false, data[i].Selected);
                    sectionList.append(item);
                }
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });
    }

    function ValidateAll() {
        var validationSummary = "";
        validationSummary += DiscountMonthValidation();
        validationSummary += SectionValidation();
        if (validationSummary !== "") {
            alert(validationSummary);
            return false;
        } else {
            GetCosts();
            return true;
        }
    }

    function GetCosts() {
        var discountMonth = document.getElementById("DiscountMonth").value;
        var sectionId = document.getElementById("SectionID").value;
        window.location.href = "/Costs/Index/?discountMonth=" + discountMonth + "&sectionId=" + sectionId;
    }
</script>
